name: Wallet Build and Release

on:
  push:
    branches: [ "release" ]
    tags:
      - "v*"

 
jobs:
  apk:
    name: Generate APK
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        
      - name: set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: gradle
          
      - name: Create file Secrets.kt
        run: touch ./app/src/main/java/com/eldarwallet/domain/models/Secrets.kt
        
      - name: Putting data secrets
        env:
          DATA: ${{ secrets.SECRETS }}
        run: echo $DATA | base64 -d > ./app/src/main/java/com/eldarwallet/domain/models/Secrets.kt
        
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
        
      - name: Build APK
        run: bash ./gradlew assembleDebug --stacktrace
        
      - name: Upload APK
        uses: actions/upload-artifact@v1
        with:
          name: apk
          path: app/build/outputs/apk/debug/app-debug.apk

  release:
    name: Release APK
    needs: apk
    runs-on: ubuntu-latest
    steps:
      - name: Download APK from build
        uses: actions/download-artifact@v1
        with:
          name: apk

      - name: Checkout
        uses: actions/checkout@v3
          
      - name: Get Version Name
        id: get_version
        run: |
          VERSION_NAME=$(grep "versionName = " app/build.gradle.kts | awk '{print $3}' | tr -d "\"")
          echo "VERSION_NAME=$VERSION_NAME" >> $GITHUB_ENV
          echo "Version Name is $VERSION_NAME"
          
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
        with:
          tag_name: v${{ env.VERSION_NAME }}
          release_name: ${{ github.event.repository.name }} v${{ env.VERSION_NAME }}

      - name: Upload Release APK
        id: upload_release_asset
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: apk/app-debug.apk
          asset_name: ${{ github.event.repository.name }}.apk
          asset_content_type: application/zip
